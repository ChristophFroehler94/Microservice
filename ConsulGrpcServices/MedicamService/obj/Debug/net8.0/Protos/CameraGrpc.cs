// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/camera.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Camera.V1 {
  public static partial class CameraService
  {
    static readonly string __ServiceName = "camera.v1.CameraService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Camera.V1.PowerRequest> __Marshaller_camera_v1_PowerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Camera.V1.PowerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Camera.V1.StatusReply> __Marshaller_camera_v1_StatusReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Camera.V1.StatusReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Camera.V1.ZoomRequest> __Marshaller_camera_v1_ZoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Camera.V1.ZoomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Camera.V1.CameraStatus> __Marshaller_camera_v1_CameraStatus = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Camera.V1.CameraStatus.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Camera.V1.StreamH264Request> __Marshaller_camera_v1_StreamH264Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Camera.V1.StreamH264Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Camera.V1.TsChunk> __Marshaller_camera_v1_TsChunk = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Camera.V1.TsChunk.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Camera.V1.SnapshotRequest> __Marshaller_camera_v1_SnapshotRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Camera.V1.SnapshotRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Camera.V1.SnapshotReply> __Marshaller_camera_v1_SnapshotReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Camera.V1.SnapshotReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Camera.V1.PowerRequest, global::Camera.V1.StatusReply> __Method_Power = new grpc::Method<global::Camera.V1.PowerRequest, global::Camera.V1.StatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Power",
        __Marshaller_camera_v1_PowerRequest,
        __Marshaller_camera_v1_StatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Camera.V1.ZoomRequest, global::Camera.V1.StatusReply> __Method_Zoom = new grpc::Method<global::Camera.V1.ZoomRequest, global::Camera.V1.StatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Zoom",
        __Marshaller_camera_v1_ZoomRequest,
        __Marshaller_camera_v1_StatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Camera.V1.CameraStatus> __Method_GetStatus = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Camera.V1.CameraStatus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStatus",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_camera_v1_CameraStatus);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Camera.V1.StreamH264Request, global::Camera.V1.TsChunk> __Method_StreamTs = new grpc::Method<global::Camera.V1.StreamH264Request, global::Camera.V1.TsChunk>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "StreamTs",
        __Marshaller_camera_v1_StreamH264Request,
        __Marshaller_camera_v1_TsChunk);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Camera.V1.SnapshotRequest, global::Camera.V1.SnapshotReply> __Method_TakeSnapshot = new grpc::Method<global::Camera.V1.SnapshotRequest, global::Camera.V1.SnapshotReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TakeSnapshot",
        __Marshaller_camera_v1_SnapshotRequest,
        __Marshaller_camera_v1_SnapshotReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Camera.V1.CameraReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CameraService</summary>
    [grpc::BindServiceMethod(typeof(CameraService), "BindService")]
    public abstract partial class CameraServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Camera.V1.StatusReply> Power(global::Camera.V1.PowerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Camera.V1.StatusReply> Zoom(global::Camera.V1.ZoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Camera.V1.CameraStatus> GetStatus(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task StreamTs(global::Camera.V1.StreamH264Request request, grpc::IServerStreamWriter<global::Camera.V1.TsChunk> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Camera.V1.SnapshotReply> TakeSnapshot(global::Camera.V1.SnapshotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CameraServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Power, serviceImpl.Power)
          .AddMethod(__Method_Zoom, serviceImpl.Zoom)
          .AddMethod(__Method_GetStatus, serviceImpl.GetStatus)
          .AddMethod(__Method_StreamTs, serviceImpl.StreamTs)
          .AddMethod(__Method_TakeSnapshot, serviceImpl.TakeSnapshot).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CameraServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Power, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Camera.V1.PowerRequest, global::Camera.V1.StatusReply>(serviceImpl.Power));
      serviceBinder.AddMethod(__Method_Zoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Camera.V1.ZoomRequest, global::Camera.V1.StatusReply>(serviceImpl.Zoom));
      serviceBinder.AddMethod(__Method_GetStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Camera.V1.CameraStatus>(serviceImpl.GetStatus));
      serviceBinder.AddMethod(__Method_StreamTs, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Camera.V1.StreamH264Request, global::Camera.V1.TsChunk>(serviceImpl.StreamTs));
      serviceBinder.AddMethod(__Method_TakeSnapshot, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Camera.V1.SnapshotRequest, global::Camera.V1.SnapshotReply>(serviceImpl.TakeSnapshot));
    }

  }
}
#endregion
